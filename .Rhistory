invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
NoDataString
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
Run()
Run()
dev.off()
gVariables
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
getwd()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
Run()
dev.off()
gVariable
gVariables
nrow(gVariables)
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
gVariables
matrix((1:nrow(gVariables))[gVariables[,Grouping]=="I"],ncol=3,byrow=TRUE)
todo <- matrix((1:nrow(gVariables))[gVariables[,Grouping]=="P"],ncol=3,byrow=TRUE)
todo
todo <- matrix((1:nrow(gVariables))[gVariables[,Grouping]=="T"],ncol=3,byrow=TRUE)
todo
todo <- matrix((1:nrow(gVariables))[gVariables[,Grouping]=="I"],ncol=3,byrow=TRUE)
todo
todo <- matrix((1:nrow(gVariables))[gVariables[,Grouping]=="P"],ncol=3,byrow=TRUE)
todo
todo <- matrix((1:nrow(gVariables))[gVariables[,Grouping]=="T"],ncol=3,byrow=TRUE)
todo
todo <- matrix((1:nrow(gVariables))[gVariables[,Grouping]=="G"],ncol=3,byrow=TRUE)
todo
todo <- matrix((1:nrow(gVariables))[gVariables[,Grouping]=="R"],ncol=3,byrow=TRUE)
todo
todo <- matrix((1:nrow(gVariables))[gVariables[,Grouping]=="SN"],ncol=3,byrow=TRUE)
todo
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="inventory",icontext="i",page=3+i)
i=1
todo <- matrix((1:nrow(gVariables))[gVariables[,Grouping]=="I"],ncol=3,byrow=TRUE)
x1 <- todo[i,1]
x2 <- todo[i,2]
x3 <- todo[i,3]
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="inventory",icontext="i",page=3+i)
state_code=22
year=2013
year=2015
year=2014
year_compare=2013
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="inventory",icontext="i",page=3+i)
state=22
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="inventory",icontext="i",page=3+i)
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
data <- readRDS("\\data\\Louisiana\\2014.rds")
getwd()
data <- readRDS("/data/Louisiana/2014.RDS")
readRDS("/data/Louisiana/2014.RDS")
readRDS("data/Louisiana/2014.RDS")
data <- readRDS("data/Louisiana/2014.RDS")
state
year
gVariables
gVariables[x2,Name]
create_summary_report(data,state,year,gVariables[x2,Name],gVariables[x2,Type],gVariables[x2,Extent],gVariables[x2,Extent_FS])
?read.table
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
gVariables
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
gVariables
nrow(NULL)
NULL>0
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
gVariables
x3
gVariables[x3,National_Data_Comparison]
is.null(NULL)
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
gVariables
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
dev.off()
dev.off()
dat
data <- dat
state==22
state<-22
year=2014
variable="Access_Control"
result1 <- data[state_code==state&year_record==year&data_item==variable,,]
result1
result1 <- data[state_code==state&year_record==year,,]
result1
variable="ACCESS_CONTROL"
result1 <- data[state_code==state&year_record==year&data_item==variable,,]
result1
result1 <- data[state_code==state&year_record==year&data_item==variable,,]
result1[,miles:=sum(end_point-begin_point),by=list(F_SYSTEM)]
result1
variable_extent="FE*"
gVariables
Extent_FS = 4
if(variable_extent %in% c("SP","FE*"))
{
result1[,expandedmiles:=sum((end_point-begin_point)*expansion_factor,na.rm = TRUE),by=list(F_SYSTEM)]
if(variable_extent_fs==4) # F_SYSTEM 1 is unexpanded
{
result1[F_SYSTEM==1,expandedmiles:=NA]
}
if(variable_extent_fs==2) # F_SYSTEM 1 is unexpanded
{
result1[Interstate==1,expandedmiles:=NA]
}
} else
{
result1[,expandedmiles:=NA,]
}
variable_extent_fs=4
if(variable_extent %in% c("SP","FE*"))
{
result1[,expandedmiles:=sum((end_point-begin_point)*expansion_factor,na.rm = TRUE),by=list(F_SYSTEM)]
if(variable_extent_fs==4) # F_SYSTEM 1 is unexpanded
{
result1[F_SYSTEM==1,expandedmiles:=NA]
}
if(variable_extent_fs==2) # F_SYSTEM 1 is unexpanded
{
result1[Interstate==1,expandedmiles:=NA]
}
} else
{
result1[,expandedmiles:=NA,]
}
result1
result1 <- switch(variable_type,
result1[,summaryFunc(value_numeric),by=list(F_SYSTEM,miles,expandedmiles)],
result1[,summaryFunc(as.Date(value_date)),by=list(F_SYSTEM,miles,expandedmiles)],
result1[,summaryFunc(value_numeric)[1:2],by=list(F_SYSTEM,miles,expandedmiles)]
)
variable_type=1
result1 <- switch(variable_type,
result1[,summaryFunc(value_numeric),by=list(F_SYSTEM,miles,expandedmiles)],
result1[,summaryFunc(as.Date(value_date)),by=list(F_SYSTEM,miles,expandedmiles)],
result1[,summaryFunc(value_numeric)[1:2],by=list(F_SYSTEM,miles,expandedmiles)]
)
result1
result1[,groupCat:=F_SYSTEM+2]
result1[,F_SYSTEM:=NULL]
result1 <- result1[!is.na(miles),]
result1
result1 <- data[state_code==state&year_record==year&data_item==variable,,]
result1[,miles:=sum(end_point-begin_point),by=list(F_SYSTEM)]
if(variable_extent %in% c("SP","FE*"))
{
result1[,expandedmiles:=sum((end_point-begin_point)*expansion_factor,na.rm = TRUE),by=list(F_SYSTEM)]
if(variable_extent_fs==4) # F_SYSTEM 1 is unexpanded
{
result1[F_SYSTEM==1,expandedmiles:=NA]
}
if(variable_extent_fs==2) # F_SYSTEM 1 is unexpanded
{
result1[Interstate==1,expandedmiles:=NA]
}
} else
{
result1[,expandedmiles:=NA,]
}
result1 <- switch(variable_type,
result1[,summaryFunc(value_numeric),by=list(F_SYSTEM,miles,expandedmiles)],
result1[,summaryFunc(as.Date(value_date)),by=list(F_SYSTEM,miles,expandedmiles)],
result1[,summaryFunc(value_numeric)[1:2],by=list(F_SYSTEM,miles,expandedmiles)]
)
result1[,groupCat:=F_SYSTEM+2]
result1[,F_SYSTEM:=NULL]
result1 <- result1[!is.na(miles),]
# interstate aggregation
result2 <- data[Interstate==1&state_code==state&year_record==year&data_item==variable,,]
result2[,miles:=sum(end_point-begin_point),]
if(variable_extent %in% c("SP"))
{
result2[,expandedmiles:=sum((end_point-begin_point)*expansion_factor),]
} else
{
result2[,expandedmiles:=NA,]
}
result2 <- switch(variable_type,
result2[,summaryFunc(value_numeric),by=list(miles,expandedmiles)],
result2[,summaryFunc(as.Date(value_date)),by=list(miles,expandedmiles)],
result2[,summaryFunc(value_numeric)[1:2],by=list(miles,expandedmiles)]
)
result2[,groupCat:=1]
# NHS aggregation
result3 <- data[NHS==1&state_code==state&year_record==year&data_item==variable,,]
result3[,miles:=sum(end_point-begin_point),]
if(variable_extent %in% c("SP"))
{
result3[,expandedmiles:=sum((end_point-begin_point)*expansion_factor),]
} else
{
result3[,expandedmiles:=NA,]
}
result3 <- switch(variable_type,
result3[,summaryFunc(value_numeric),by=list(miles,expandedmiles)],
result3[,summaryFunc(as.Date(value_date)),by=list(miles,expandedmiles)],
result3[,summaryFunc(value_numeric)[1:2],by=list(miles,expandedmiles)]
)
result3[,groupCat:=2]
result <- rbind(result2,result3,result1)
result[,count:=string_format(count)]
result[,count.na:=string_format(count.na)]
result[,miles:=string_format(miles)]
result[,miles:=string_format(expandedmiles)]
# merges in the empty f_systems so full tables are displayed
if(nrow(result)> 0)
{
result <- merge(data.table(groupCat=1:length(gF_SYSTEM_levels)),result,by="groupCat",all.x=T)
}
if(variable_type==1)
{
result[,min:=string_format(min)]
result[,mean:=string_format(mean)]
result[,median:=string_format(median)]
result[,max:=string_format(max)]
}
if(variable_type==2)
{
result[,min:=year(min)]
result[,mean:=year(mean)]
result[,median:=year(median)]
result[,max:=year(max)]
}
result
result3
result <- rbind(result2,result3,result1)
result
result[,count:=string_format(count)]
result[,count.na:=string_format(count.na)]
result[,miles:=string_format(miles)]
result[,miles:=string_format(expandedmiles)]
result
result <- rbind(result2,result3,result1)
result[,miles:=string_format(miles)]
result
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
variable="SPEED_LIMIT"
state_code
gVariable[data_item==variable]
gVariables[data_item==variable]
names(gVariables)
gVariables[Name==variable]
variable_type=1
variable_extent="SP"
variable_extent_fs=0
result1 <- data[state_code==state&year_record==year&data_item==variable,,]
result1
head(data)
summary(data[,expansion_factor])
variable="AADT"
yearcomparison
yearcomparison=2013
year
state
data,
state,
data
var.1    <- data[state_code==state&year_record==year&data_item==variable&!is.na(value_numeric)&F_SYSTEM!=7&!is.na(F_SYSTEM),list(route_id,begin_point,end_point,value_numeric,F_SYSTEM,Interstate,NHS)]
var.2    <- data[state_code==state&year_record==yearcomparison&data_item==variable&!is.na(value_numeric)&F_SYSTEM!=7&!is.na(F_SYSTEM),list(route_id,begin_point,end_point,value_numeric,F_SYSTEM,Interstate,NHS)]
var.1
invalue1 <- var.1[,min(value_numeric)]
minvalue2 <- var.2[,min(value_numeric)]
maxvalue1 <- var.1[,max(value_numeric)]
maxvalue2 <- var.2[,max(value_numeric)]
minvalue <- min(minvalue1,minvalue2)
maxvalue <- max(maxvalue1,maxvalue2)
minvalue1 <- var.1[,min(value_numeric)]
minvalue2 <- var.2[,min(value_numeric)]
maxvalue1 <- var.1[,max(value_numeric)]
maxvalue2 <- var.2[,max(value_numeric)]
minvalue <- min(minvalue1,minvalue2)
maxvalue <- max(maxvalue1,maxvalue2)
var.1
d1=var.1
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
var.1
densityPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national1,title="Interstate",minvalue,maxvalue)
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
densityPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national1,title="Interstate",minvalue,maxvalue)
national1 <- NULL
densityPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national1,title="Interstate",minvalue,maxvalue)
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
densityPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national1,title="Interstate",minvalue,maxvalue)
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
variables="CRACKING_PERCENT"
var.1    <- data[state_code==state&year_record==year&data_item==variable,list(route_id,begin_point,end_point,value_numeric,F_SYSTEM)]
var.2    <- data[state_code==state&year_record==yearcomparison&data_item==variable,list(route_id,begin_point,end_point,value_numeric,F_SYSTEM)]
var.yoy <- sqldf("
select
A.route_id,
A.F_SYSTEM,
A.begin_point as [begin_point.x],
A.end_point   as [end_point.x],
A.value_numeric as [value_numeric.x],
B.value_numeric as [value_numeric.y]
from [var.1] A
left join [var.2] B on
A.route_id = B.route_id and
(
(
( A.begin_point <= B.end_point   ) and
( A.end_point   >= B.begin_point ) and
( A.begin_point >= B.begin_point ) and
( A.end_point   <= B.end_point   )
) or
(
( B.begin_point <= A.end_point   ) and
( B.end_point   >= A.begin_point ) and
( B.begin_point >= A.begin_point ) and
( B.end_point   <= A.end_point   )
)
)
")
var.yoy <- data.table(var.yoy)
var.yoy <- var.yoy[!is.na(value_numeric.x)&!is.na(value_numeric.y),]
report <- var.yoy[,change:=value_numeric.x/value_numeric.y]
report[,change:=(change-1)*100]
report[, bin2 := cut_custom(change)] # using custom function to have more control
report[change< -1e-3 ,color:=factor("Reduction")]
report[change>=-1e-3&change<=1e3,color:=factor("Same")]
report[change>1e-3 ,color:=factor("Increase")]
report[is.na(change) ,color:=factor("NA")]
report
report <- var.yoy[,change:=value_numeric.x/value_numeric.y]
report[,change:=(change-1)*100]
report[, bin2 := cut_custom(change)] # using custom function to have more control
report[change< -1e-3 ,color:=factor("Reduction")]
report[change>=-1e-3&change<=1e3,color:=factor("Same")]
report[change>1e-3 ,color:=factor("Increase")]
report[is.na(change) ,color:=factor("NA")]
report[bin2]
report[,bin2]
table(report[,bin2])
p <- ggplot(report, aes(x=bin2,fill=color)) + geom_bar(width=0.5,stat="bin")
p <- p + scale_x_discrete("", breaks=factor(c(1:23,NA),levels=c(1:23,NA),labels=c("< -100%",
"-100%",
"-90%",
"-80%",
"-70%",
"-60%",
"-50%",
"-40%",
"-30%",
"-20%",
"-10%",
"0%",
"10%",
"20%",
"30%",
"40%",
"50%",
"60%",
"70%",
"80%",
"90%",
"100%",
"> 100%","N/A"
),exclude=NULL), drop=FALSE)
p
p <- p +
scale_fill_manual("",
values=c("Same"="red","Reduction"="gray50","increase"="gray50","NA"="white"))
p
p <- ggplot(report, aes(x=bin2,fill=color)) + geom_bar(width=0.5,stat="bin")
p <- p + scale_x_discrete("", breaks=factor(c(1:23,NA),levels=c(1:23,NA),labels=c("< -100%",
"-100%",
"-90%",
"-80%",
"-70%",
"-60%",
"-50%",
"-40%",
"-30%",
"-20%",
"-10%",
"0%",
"10%",
"20%",
"30%",
"40%",
"50%",
"60%",
"70%",
"80%",
"90%",
"100%",
"> 100%","N/A"
),exclude=NULL), drop=FALSE)
p
p +
scale_fill_manual("",
values=c("Same"="red","Reduction"="gray50","increase"="gray50","NA"="white"))
p +
scale_fill_manual("",
values=c("Same"="red","Reduction"="gray50","Increase"="gray50","NA"="white"))
report
p <- ggplot(report, aes(x=bin2,fill=color)) + geom_bar(width=0.5,stat="bin",weight=end_point.x-begin_point.x)
p <- ggplot(report, aes(x=bin2,fill=color,weight=end_point.x-begin_point.x)) + geom_bar(width=0.5,stat="bin")
p
p <- ggplot(report, aes(x=bin2,fill=color)) + geom_bar(width=0.5,stat="bin")
p
p <- ggplot(report, aes(x=bin2,fill=color,weight=end_point.x-begin_point.x)) + geom_bar(width=0.5,stat="bin")
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
var.yoy
var.1    <- data[state_code==state&year_record==year&data_item==variable,list(route_id,begin_point,end_point,value_numeric,F_SYSTEM)]
var.2    <- data[state_code==state&year_record==yearcomparison&data_item==variable,list(route_id,begin_point,end_point,value_numeric,F_SYSTEM)]
var.yoy <- sqldf("
select
A.route_id,
A.F_SYSTEM,
A.begin_point as [begin_point.x],
A.end_point   as [end_point.x],
A.value_numeric as [value_numeric.x],
B.value_numeric as [value_numeric.y]
from [var.1] A
left join [var.2] B on
A.route_id = B.route_id and
(
(
( A.begin_point <= B.end_point   ) and
( A.end_point   >= B.begin_point ) and
( A.begin_point >= B.begin_point ) and
( A.end_point   <= B.end_point   )
) or
(
( B.begin_point <= A.end_point   ) and
( B.end_point   >= A.begin_point ) and
( B.begin_point >= A.begin_point ) and
( B.end_point   <= A.end_point   )
)
)
")
var.yoy <- data.table(var.yoy)
var.yoy <- var.yoy[!is.na(value_numeric.x)&!is.na(value_numeric.y),]
var.yoy
report <- var.yoy[,change:=value_numeric.x/value_numeric.y]
report[,change:=(change-1)*100]
report[, bin2 := cut_custom(change)] # using custom function to have more control
report[change< -1e-3 ,color:=factor("Reduction")]
report[change>=-1e-3&change<=1e3,color:=factor("Same")]
report[change>1e-3 ,color:=factor("Increase")]
report[is.na(change) ,color:=factor("NA")]
p <- ggplot(report, aes(x=bin2,fill=color,weight=end_point.x-begin_point.x)) + geom_bar(width=0.5,stat="bin")
p <- p + scale_x_discrete("", breaks=factor(c(1:23,NA),levels=c(1:23,NA),labels=c("< -100%","-100%","-75%","-50%","-25%","-15%","-5%","-1%","0%","1%","5%","15%","25%","50%","75%","100%","> 100%","N/A"),exclude=NULL), drop=FALSE)
p <- p + scale_x_discrete("", breaks=factor(c(1:17,NA),levels=c(1:17,NA),labels=c("< -100%","-100%","-75%","-50%","-25%","-15%","-5%","-1%","0%","1%","5%","15%","25%","50%","75%","100%","> 100%","N/A"),exclude=NULL), drop=FALSE)
p
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
dev.off()
dat
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
Run()
Run()
dev.off()
