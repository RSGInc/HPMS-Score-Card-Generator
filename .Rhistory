panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"),
plot.margin = unit(c(topMargin,leftMargin,bottomMargin,rightMargin), "cm")
)
p <- arrangeGrob(p1,p2,p3,nrow=3)
topMargin=0;leftMargin=0;bottomMargin=0;rightMargin=0
p1 <- ggplot(data = d1, aes(x = value_numeric))
p2 <- ggplot(data = d1, aes(x = value_numeric))
p3 <- ggplot(data = d1, aes(x = value_numeric))
if(nrow(d1)>0)
{
p1 <- p1 + geom_density(data = d1, color="slategray", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p1 <- p1 + stat_density(geom="line",data = d1, color="slategray", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p1 <- p1 + ylab(year1)
} else
{
p1 <- p1 + ylab("")
}
} else
{
p1 <- p1 + geom_density(data = national, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
if(nrow(d2)>0)
{
p2 <- p2 + geom_density(data = d2, color ="gray75", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p2 <- p2 + stat_density(geom="line",data = d2, color ="gray75", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p2 <- p2 + ylab(year2)
} else
{
p2 <- p2 + ylab("")
}
} else
{
p2 <- p2 + geom_density(data = national, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
if(!is.null(d3))
{
p3 <- p3 + geom_density(data = d3, color ="black", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p3 <- p3 + stat_density(geom="line",data = d3, color ="black", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p3 <- p3 + ylab("National")
} else
{
p3 <- p3 + ylab("")
}
}
p1 <- p1 + ggtitle(title)
#p <- p +
p1 <- p1 +     #geom_density(data = var.national,color="black", linetype="twodash", size=0.25) +
theme_minimal() +
#scale_y_continuous(labels = comma)+
scale_x_continuous(labels = comma,limits=c(minvalue,maxvalue)) +
#xlim(c(minvalue,maxvalue))+
theme(
axis.text.x=element_blank(),#element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_blank(),#element_text(size=6, angle = 0, hjust = 0,colour="slategray"),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_text(size=7, face="bold", angle = 90, hjust = 0.5,colour="slategray"),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"),
plot.margin = unit(c(topMargin,leftMargin,bottomMargin,rightMargin), "cm")
)
p2 <- p2 +     #geom_density(data = var.national,color="black", linetype="twodash", size=0.25) +
theme_minimal() +
#scale_y_continuous(labels = comma)+
scale_x_continuous(labels = comma,limits=c(minvalue,maxvalue)) +
theme(
axis.text.x=element_blank(),#element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_blank(),#element_text(size=6, angle = 0, hjust = 0,colour="slategray"),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_text(size=7, face="bold", angle = 90, hjust = 0.5,colour="gray75"),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"),
plot.margin = unit(c(topMargin,leftMargin,bottomMargin,rightMargin), "cm")
)
p3 <- p3 +     #geom_density(data = var.national,color="black", linetype="twodash", size=0.25) +
theme_minimal() +
#scale_y_continuous(labels = comma)+
scale_x_continuous(labels = comma,limits=c(minvalue,maxvalue))  +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_blank(),#element_text(size=6, angle = 0, hjust = 0,colour="slategray"),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_text(size=7, face="bold", angle = 90, hjust = 0.5,colour="black"),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"),
plot.margin = unit(c(topMargin,leftMargin,bottomMargin,rightMargin), "cm")
)
p <- arrangeGrob(p1,p2,p3,nrow=3)
p1 <- ggplot(data = d1, aes(x = value_numeric))
p2 <- ggplot(data = d1, aes(x = value_numeric))
p3 <- ggplot(data = d1, aes(x = value_numeric))
if(nrow(d1)>0)
{
p1 <- p1 + geom_density(data = d1, color="slategray", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p1 <- p1 + stat_density(geom="line",data = d1, color="slategray", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p1 <- p1 + ylab(year1)
} else
{
p1 <- p1 + ylab("")
}
} else
{
p1 <- p1 + geom_density(data = national, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
p1
if(nrow(d2)>0)
{
p2 <- p2 + geom_density(data = d2, color ="gray75", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p2 <- p2 + stat_density(geom="line",data = d2, color ="gray75", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p2 <- p2 + ylab(year2)
} else
{
p2 <- p2 + ylab("")
}
} else
{
p2 <- p2 + geom_density(data = national, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
p2
p2 <- ggplot(data = d1, aes(x = value_numeric))
p2 + geom_density(data = d3, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
p1 <- ggplot(data = d1, aes(x = value_numeric))
p2 <- ggplot(data = d1, aes(x = value_numeric))
p3 <- ggplot(data = d1, aes(x = value_numeric))
if(nrow(d1)>0)
{
p1 <- p1 + geom_density(data = d1, color="slategray", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p1 <- p1 + stat_density(geom="line",data = d1, color="slategray", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p1 <- p1 + ylab(year1)
} else
{
p1 <- p1 + ylab("")
}
} else
{
p1 <- p1 + geom_density(data = d3, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
if(nrow(d2)>0)
{
p2 <- p2 + geom_density(data = d2, color ="gray75", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p2 <- p2 + stat_density(geom="line",data = d2, color ="gray75", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p2 <- p2 + ylab(year2)
} else
{
p2 <- p2 + ylab("")
}
} else
{
p2 <- p2 + geom_density(data = d3, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
if(!is.null(d3))
{
p3 <- p3 + geom_density(data = d3, color ="black", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p3 <- p3 + stat_density(geom="line",data = d3, color ="black", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p3 <- p3 + ylab("National")
} else
{
p3 <- p3 + ylab("")
}
}
p1 <- p1 + ggtitle(title)
#p <- p +
p1 <- p1 +     #geom_density(data = var.national,color="black", linetype="twodash", size=0.25) +
theme_minimal() +
#scale_y_continuous(labels = comma)+
scale_x_continuous(labels = comma,limits=c(minvalue,maxvalue)) +
#xlim(c(minvalue,maxvalue))+
theme(
axis.text.x=element_blank(),#element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_blank(),#element_text(size=6, angle = 0, hjust = 0,colour="slategray"),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_text(size=7, face="bold", angle = 90, hjust = 0.5,colour="slategray"),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"),
plot.margin = unit(c(topMargin,leftMargin,bottomMargin,rightMargin), "cm")
)
p2 <- p2 +     #geom_density(data = var.national,color="black", linetype="twodash", size=0.25) +
theme_minimal() +
#scale_y_continuous(labels = comma)+
scale_x_continuous(labels = comma,limits=c(minvalue,maxvalue)) +
theme(
axis.text.x=element_blank(),#element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_blank(),#element_text(size=6, angle = 0, hjust = 0,colour="slategray"),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_text(size=7, face="bold", angle = 90, hjust = 0.5,colour="gray75"),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"),
plot.margin = unit(c(topMargin,leftMargin,bottomMargin,rightMargin), "cm")
)
p3 <- p3 +     #geom_density(data = var.national,color="black", linetype="twodash", size=0.25) +
theme_minimal() +
#scale_y_continuous(labels = comma)+
scale_x_continuous(labels = comma,limits=c(minvalue,maxvalue))  +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_blank(),#element_text(size=6, angle = 0, hjust = 0,colour="slategray"),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_text(size=7, face="bold", angle = 90, hjust = 0.5,colour="black"),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"),
plot.margin = unit(c(topMargin,leftMargin,bottomMargin,rightMargin), "cm")
)
p <- arrangeGrob(p1,p2,p3,nrow=3)
p1 <- ggplot(data = d1, aes(x = value_numeric))
p2 <- ggplot(data = d1, aes(x = value_numeric))
p3 <- ggplot(data = d1, aes(x = value_numeric))
if(nrow(d1)>0)
{
p1 <- p1 + geom_density(data = d1, color="slategray", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p1 <- p1 + stat_density(geom="line",data = d1, color="slategray", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p1 <- p1 + ylab(year1)
} else
{
p1 <- p1 + ylab("")
}
} else
{
p1 <- p1 + geom_density(data = d3, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
if(nrow(d2)>0)
{
p2 <- p2 + geom_density(data = d2, color ="gray75", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p2 <- p2 + stat_density(geom="line",data = d2, color ="gray75", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p2 <- p2 + ylab(year2)
} else
{
p2 <- p2 + ylab("")
}
} else
{
p2 <- p2 + geom_density(data = d3, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
p2
p2 <- ggplot(data = d1, aes(x = value_numeric))
p2 + geom_density(data = d3, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
p2 <- p2 + geom_density(data = d3, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
p2
nrow(d2)
p1 <- ggplot(data = d1, aes(x = value_numeric))
p2 <- ggplot(data = d1, aes(x = value_numeric))
p3 <- ggplot(data = d1, aes(x = value_numeric))
if(nrow(d1)>0)
{
p1 <- p1 + geom_density(data = d1, color="slategray", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p1 <- p1 + stat_density(geom="line",data = d1, color="slategray", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p1 <- p1 + ylab(year1)
} else
{
p1 <- p1 + ylab("")
}
} else {
p1 <- p1 + geom_density(data = d3, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
if(nrow(d2)>0)
{
p2 <- p2 + geom_density(data = d2, color ="gray75", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
#p2 <- p2 + stat_density(geom="line",data = d2, color ="gray75", linetype="solid", size=0.35,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
if(showLabel)
{
p2 <- p2 + ylab(year2)
} else
{
p2 <- p2 + ylab("")
}
} else {
p2 <- p2 + geom_density(data = d3, color ="white", linetype="solid", size=0.25,fill="white",adjust=adjustment,aes(weights=(end_point-begin_point)/sum(end_point-begin_point)))
}
p2
p2 <- ggplot(data = d1, aes(x = value_numeric))
nrow(d2)>0
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
p1 <- densityPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national[Interstate==1],title=gF_SYSTEM_levels[1],minvalue,maxvalue,year,yearcomparison,showLabel=TRUE)
p1
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
Run()
dev.off()
data
data<-dat
year=2014
yearcompare=2013
todo <- matrix((1:nrow(gVariables))[gVariables[,RampAnalysis]=="Y"],ncol=3,byrow=TRUE)
i=1
x1 <- todo[i,1]
x2 <- todo[i,2]
x3 <- todo[i,3]
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="ramps: detailed review",icontext="r",page=3+i,ramps=TRUE)
state=36
x1 <- todo[i,1]
x2 <- todo[i,2]
x3 <- todo[i,3]
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="ramps: detailed review",icontext="r",page=3+i,ramps=TRUE)
year_compare=2013
x1 <- todo[i,1]
x2 <- todo[i,2]
x3 <- todo[i,3]
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="ramps: detailed review",icontext="r",page=3+i,ramps=TRUE)
density(runif(10))
density(runif(10))$y
max(density(runif(10))$y)
density(runif(10))$y
max(density(runif(10))$y)
max(density(runif(10))$y)
max(density(runif(10))$y)
max(density(runif(10))$y)
max(density(runif(10))$y)
max(density(runif(10))$y)
variable="AADT"
var.1    <- data[state_code==state&year_record==year          &data_item==variable&FACILITY_TYPE!=4&!is.na(value_numeric),list(route_id,begin_point,end_point,value_numeric,F_SYSTEM,Interstate,NHS)]
var.2    <- data[state_code==state&year_record==yearcomparison&data_item==variable&FACILITY_TYPE!=4&!is.na(value_numeric),list(route_id,begin_point,end_point,value_numeric,F_SYSTEM,Interstate,NHS)]
national  <- readRDS(paste0("data\\+National\\",yearcomparison,"\\",variable,".rds"))
minvalue1 <- var.1[,min(value_numeric)]
minvalue2 <- var.2[,min(value_numeric)]
minvalue3 <- national[,min(value_numeric)]
maxvalue1 <- var.1[,max(value_numeric)]
maxvalue2 <- var.2[,max(value_numeric)]
maxvalue3 <- national[,max(value_numeric)]
minvalue <- min(minvalue1,minvalue2,minvalue3)
maxvalue <- max(maxvalue1,maxvalue2,maxvalue3)
yearcomparison=2013
var.2    <- data[state_code==state&year_record==yearcomparison&data_item==variable&FACILITY_TYPE!=4&!is.na(value_numeric),list(route_id,begin_point,end_point,value_numeric,F_SYSTEM,Interstate,NHS)]
national  <- readRDS(paste0("data\\+National\\",yearcomparison,"\\",variable,".rds"))
minvalue1 <- var.1[,min(value_numeric)]
minvalue2 <- var.2[,min(value_numeric)]
minvalue3 <- national[,min(value_numeric)]
maxvalue1 <- var.1[,max(value_numeric)]
maxvalue2 <- var.2[,max(value_numeric)]
maxvalue3 <- national[,max(value_numeric)]
minvalue <- min(minvalue1,minvalue2,minvalue3)
maxvalue <- max(maxvalue1,maxvalue2,maxvalue3)
?density
var.1[,(end_point-begin_point)/sum(end_point-begin_point)]
density(var.1[,value_numeric])
density(var.1[,value_numeric],weights=var.1[(end_point-begin_point)/sum(end_point-begin_point)])
var.1[(end_point-begin_point)/sum(end_point-begin_point)]
var.1    <- data[state_code==state&year_record==year          &data_item==variable&FACILITY_TYPE!=4&!is.na(value_numeric),list(route_id,begin_point,end_point,value_numeric,F_SYSTEM,Interstate,NHS)]
var.2    <- data[state_code==state&year_record==yearcomparison&data_item==variable&FACILITY_TYPE!=4&!is.na(value_numeric),list(route_id,begin_point,end_point,value_numeric,F_SYSTEM,Interstate,NHS)]
var.1[,(end_point-begin_point)/sum(end_point-begin_point)]
density(var.1[,value_numeric],weights=var.1[,(end_point-begin_point)/sum(end_point-begin_point)])
d1$y
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
dev.off()
national  <- readRDS(paste0("data\\+National\\",yearcomparison,"\\",variable,".rds"))
minvalue1 <- var.1[,min(value_numeric)]
minvalue2 <- var.2[,min(value_numeric)]
minvalue3 <- national[,min(value_numeric)]
maxvalue1 <- var.1[,max(value_numeric)]
maxvalue2 <- var.2[,max(value_numeric)]
maxvalue3 <- national[,max(value_numeric)]
minvalue <- min(minvalue1,minvalue2,minvalue3)
maxvalue <- max(maxvalue1,maxvalue2,maxvalue3)
d1 <- density(var.1[,value_numeric],weights=var.1[,(end_point-begin_point)/sum(end_point-begin_point)])
d2 <- density(var.2[,value_numeric],weights=var.1[,(end_point-begin_point)/sum(end_point-begin_point)])
d3 <- density(national[,value_numeric],weights=var.1[,(end_point-begin_point)/sum(end_point-begin_point)])
ymax <- max(d1$y,d2$y,d3$y)*1.05
p1 <- densityPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national[Interstate==1],title=gF_SYSTEM_levels[1],minvalue,maxvalue,year,yearcomparison,showLabel=TRUE,ymax=ymax)
p1 <- densityPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national[Interstate==1],title=gF_SYSTEM_levels[1],minvalue=minvalue,maxvalue=maxvalue,year=year,yearcomparison=yearcomparison,showLabel=TRUE,ymax=ymax)
p1 <- densityPlot(d1=var.1[Interstate==1],d2=var.2[Interstate==1],d3=national[Interstate==1],title=gF_SYSTEM_levels[1],minvalue=minvalue,maxvalue=maxvalue,year=year,yearcomparison=yearcomparison,showLabel=TRUE,ymax=ymax)
p1 <- densityPlot(d1=var.1[Interstate==1],d2=var.2[Interstate==1],d3=national[Interstate==1],title=gF_SYSTEM_levels[1],minvalue=minvalue,maxvalue=maxvalue,year1=year,year2=yearcomparison,showLabel=TRUE,ymax=ymax)
national  <- readRDS(paste0("data\\+National\\",yearcomparison,"\\",variable,".rds"))
minvalue1 <- var.1[,min(value_numeric)]
minvalue2 <- var.2[,min(value_numeric)]
minvalue3 <- national[,min(value_numeric)]
maxvalue1 <- var.1[,max(value_numeric)]
maxvalue2 <- var.2[,max(value_numeric)]
maxvalue3 <- national[,max(value_numeric)]
minvalue <- min(minvalue1,minvalue2,minvalue3)
maxvalue <- max(maxvalue1,maxvalue2,maxvalue3)
d1 <- density(var.1[,value_numeric],weights=var.1[,(end_point-begin_point)/sum(end_point-begin_point)])
d2 <- density(var.2[,value_numeric],weights=var.1[,(end_point-begin_point)/sum(end_point-begin_point)])
d3 <- density(national[,value_numeric],weights=var.1[,(end_point-begin_point)/sum(end_point-begin_point)])
ymax <- max(d1$y,d2$y,d3$y)*1.05
national  <- readRDS(paste0("data\\+National\\",yearcomparison,"\\",variable,".rds"))
minvalue1 <- var.1[,min(value_numeric)]
minvalue2 <- var.2[,min(value_numeric)]
minvalue3 <- national[,min(value_numeric)]
maxvalue1 <- var.1[,max(value_numeric)]
maxvalue2 <- var.2[,max(value_numeric)]
maxvalue3 <- national[,max(value_numeric)]
minvalue <- min(minvalue1,minvalue2,minvalue3)
maxvalue <- max(maxvalue1,maxvalue2,maxvalue3)
d1 <- density(var.1[,value_numeric],weights=var.1[,(end_point-begin_point)/sum(end_point-begin_point)])
d2 <- density(var.2[,value_numeric],weights=var.2[,(end_point-begin_point)/sum(end_point-begin_point)])
d3 <- density(national[,value_numeric],weights=national[,(end_point-begin_point)/sum(end_point-begin_point)])
ymax <- max(d1$y,d2$y,d3$y)*1.05
p1 <- densityPlot(d1=var.1[Interstate==1],d2=var.2[Interstate==1],d3=national[Interstate==1],title=gF_SYSTEM_levels[1],minvalue=minvalue,maxvalue=maxvalue,year1=year,year2=yearcomparison,showLabel=TRUE,ymax=ymax)
p1
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
p1 <- densityPlot(d1=var.1[Interstate==1],d2=var.2[Interstate==1],d3=national[Interstate==1],title=gF_SYSTEM_levels[1],minvalue=minvalue,maxvalue=maxvalue,year1=year,year2=yearcomparison,showLabel=TRUE,ymax=ymax)
p1
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
p1 <- densityPlot(d1=var.1[Interstate==1],d2=var.2[Interstate==1],d3=national[Interstate==1],title=gF_SYSTEM_levels[1],minvalue=minvalue,maxvalue=maxvalue,year1=year,year2=yearcomparison,showLabel=TRUE,ymax=ymax)
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
p1 <- densityPlot(d1=var.1[Interstate==1],d2=var.2[Interstate==1],d3=national[Interstate==1],title=gF_SYSTEM_levels[1],minvalue=minvalue,maxvalue=maxvalue,year1=year,year2=yearcomparison,showLabel=TRUE,ymax=ymax)
p1
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
