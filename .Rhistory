d
p <- d[,sum(end_point-begin_point),by=list(type,value_numeric)]
p <- ggplot(p,aes(x=value_numeric,y=V1,fill=type))
p <- p + geom_bar(width=0.5,stat="identity",position=position_dodge(0.8))
p <- p + coord_flip()
p <- p + scale_fill_manual("",values=c("red"="red","blue"="blue","black"="black")
#p <- p + facet_grid(. ~ type)
p <- p + theme_minimal() +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_text(size = 0, angle = 0, hjust = 0),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white")
)
p
p <- d[,sum(end_point-begin_point),by=list(type,value_numeric)]
p <- ggplot(p,aes(x=value_numeric,y=V1,fill=type))
p <- p + geom_bar(width=0.5,stat="identity",position=position_dodge(0.8))
p <- p + coord_flip()
p <- p + scale_fill_manual("",values=c("red"="red","blue"="blue","black"="black"))
#p <- p + facet_grid(. ~ type)
p <- p + theme_minimal() +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_text(size = 0, angle = 0, hjust = 0),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white")
)
p
p <- d[,sum(end_point-begin_point),by=list(type,value_numeric)]
p <- ggplot(p,aes(x=value_numeric,y=V1,fill=type))
p <- p + geom_bar(width=0.25,stat="identity",position=position_dodge(0.8))
p <- p + coord_flip()
p <- p + scale_fill_manual("",values=c("red"="red","blue"="blue","black"="black"))
#p <- p + facet_grid(. ~ type)
p <- p + theme_minimal() +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_text(size = 0, angle = 0, hjust = 0),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white")
)
p
p <- d[,sum(end_point-begin_point),by=list(type,value_numeric)]
p <- ggplot(p,aes(x=value_numeric,y=V1,fill=type))
p <- p + geom_bar(width=0.25,stat="identity",position=position_dodge(0.8))
p <- p + coord_flip()
p <- p + scale_fill_manual("",values=c("red"="red","blue"="blue","black"="black"))
#p <- p + facet_grid(. ~ type)
p <- p + theme_minimal() +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_text(size = 0, angle = 0, hjust = 0),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
plot.title = element_text(size=7, face="bold",colour = "slategray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white")
)
p
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
todo <- matrix((1:nrow(gVariables))[gVariables[,RampAnalysis]=="Y"],ncol=3,byrow=TRUE)
x1 <- todo[i,1]
x2 <- todo[i,2]
i=1
x1 <- todo[i,1]
x2 <- todo[i,2]
x3 <- todo[i,3]
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="ramps: detailed review",icontext="r",page=3+i,ramps=TRUE)
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="ramps: detailed review",icontext="r",page=3+i,ramps=TRUE)
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
create_page_summary(data,state,year,year_compare,x1=x1,x2=x2,x3=x3, title="ramps: detailed review",icontext="r",page=3+i,ramps=TRUE)
x3
ramps=TRUE
x1
x2
x3
create_travel_yoy_density(data,state,year,year_compare,gVariables[x2,Name],gVariables[x2,National_Data_Comparison],ramps=ramps)
create_travel_yoy_density(data,state,year,year_compare,gVariables[x1,Name],gVariables[x1,National_Data_Comparison],ramps=ramps),
create_travel_yoy_density(data,state,year,year_compare,gVariables[x1,Name],gVariables[x1,National_Data_Comparison],ramps=ramps)
gVariables[x1,Name]
gVariables[x2,Name]
create_travel_yoy_density(data,state,year,year_compare,gVariables[x2,Name],gVariables[x2,National_Data_Comparison],ramps=ramps)
variable=gVariables[x2,Name]
var.1    <- data[state_code==state&year_record==year          &data_item==variable&FACILITY_TYPE==4&!is.na(value_numeric),list(route_id,begin_point,end_point,value_numeric,F_SYSTEM,Interstate,NHS)]
var.2    <- data[state_code==state&year_record==yearcomparison&data_item==variable&FACILITY_TYPE==4&!is.na(value_numeric),list(route_id,begin_point,end_point,value_numeric,F_SYSTEM,Interstate,NHS)]
gVariablesLabels[Name==variable,NumLevels]
labels <- c()
l <- unlist(gVariablesLabels[Name==variable,list(Code1,Code2,Code3,Code4,Code5,Code6,Code7,Code8,Code9,Code10,Code11)])
for(i in 1:11)
{
if(l[i]!="")
{
labels <- c(labels,l[i])
}
}
p1 <- barPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national1,labels,title=gF_SYSTEM_levels[1])
p2 <- barPlot(var.1[NHS==1]       ,var.2[NHS==1]       ,d3=national2,labels,title=gF_SYSTEM_levels[2])
p3 <- barPlot(var.1[F_SYSTEM==1]  ,var.2[F_SYSTEM==1]  ,d3=national3,labels,title=gF_SYSTEM_levels[3])
p4 <- barPlot(var.1[F_SYSTEM==2]  ,var.2[F_SYSTEM==2]  ,d3=national4,labels,title=gF_SYSTEM_levels[4])
var.1[NHS==1]
var.2[NHS==1]
p1
p2
p4
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
p1 <- barPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national1,labels,title=gF_SYSTEM_levels[1])
p2 <- barPlot(var.1[NHS==1]       ,var.2[NHS==1]       ,d3=national2,labels,title=gF_SYSTEM_levels[2])
p3 <- barPlot(var.1[F_SYSTEM==1]  ,var.2[F_SYSTEM==1]  ,d3=national3,labels,title=gF_SYSTEM_levels[3])
p4 <- barPlot(var.1[F_SYSTEM==2]  ,var.2[F_SYSTEM==2]  ,d3=national4,labels,title=gF_SYSTEM_levels[4])
barPlot <- function(
d1,
d2,
d3=NULL,
labels,
title=""
)
{
d <- cbind(type="red",d1)
if(nrow(d2)>0)
{
d <- rbind(d,
cbind(type="blue",d2))
}
if(!is.null(d3))
{
d <- rbind(d,
cbind(type="black",d3)
)
}
{
d <- d[,value_numeric:=labels[value_numeric]]
d <- d[,value_numeric:=factor(value_numeric)]
d <- d[,         type:=factor(type)]
p <- d[,sum(end_point-begin_point),by=list(type,value_numeric)]
p <- ggplot(p,aes(x=value_numeric,y=V1,fill=type))
p <- p + geom_bar(width=0.25,stat="identity",position=position_dodge(0.8))
p <- p + coord_flip()
p <- p + ggtitle(title)
p <- p + scale_fill_manual("",values=c("red"="red","blue"="blue","black"="black"))
#p <- p + facet_grid(. ~ type)
p <- p + theme_minimal() +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_text(size = 0, angle = 0, hjust = 0),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
legend.position="none",
plot.title = element_text(size=7, face="bold",colour = "slategray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white")
)
return(p)
} else {
return(textGrob(""))
}
}
d <- cbind(type="red",d1)
if(nrow(d2)>0)
{
d <- rbind(d,
cbind(type="blue",d2))
}
if(!is.null(d3))
{
d <- rbind(d,
cbind(type="black",d3)
)
}
{
d <- d[,value_numeric:=labels[value_numeric]]
d <- d[,value_numeric:=factor(value_numeric)]
d <- d[,         type:=factor(type)]
p <- d[,sum(end_point-begin_point),by=list(type,value_numeric)]
p <- ggplot(p,aes(x=value_numeric,y=V1,fill=type))
p <- p + geom_bar(width=0.25,stat="identity",position=position_dodge(0.8))
p <- p + coord_flip()
p <- p + ggtitle(title)
p <- p + scale_fill_manual("",values=c("red"="red","blue"="blue","black"="black"))
#p <- p + facet_grid(. ~ type)
p <- p + theme_minimal() +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_text(size = 0, angle = 0, hjust = 0),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
legend.position="none",
plot.title = element_text(size=7, face="bold",colour = "slategray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white")
)
return(p)
} else {
return(textGrob(""))
}
}
barPlot <- function(
d1,
d2,
d3=NULL,
labels,
title=""
)
{
d <- cbind(type="red",d1)
if(nrow(d2)>0)
{
d <- rbind(d,
cbind(type="blue",d2))
}
if(!is.null(d3))
{
d <- rbind(d,
cbind(type="black",d3)
)
}
{
d <- d[,value_numeric:=labels[value_numeric]]
d <- d[,value_numeric:=factor(value_numeric)]
d <- d[,         type:=factor(type)]
p <- d[,sum(end_point-begin_point),by=list(type,value_numeric)]
p <- ggplot(p,aes(x=value_numeric,y=V1,fill=type))
p <- p + geom_bar(width=0.25,stat="identity",position=position_dodge(0.8))
p <- p + coord_flip()
p <- p + ggtitle(title)
p <- p + scale_fill_manual("",values=c("red"="red","blue"="blue","black"="black"))
#p <- p + facet_grid(. ~ type)
p <- p + theme_minimal() +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_text(size = 0, angle = 0, hjust = 0),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
legend.position="none",
plot.title = element_text(size=7, face="bold",colour = "slategray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white")
)
return(p)
} else {
return(textGrob(""))
}
}
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
barPlot <- function(
d1,
d2,
d3=NULL,
labels,
title=""
)
{
d <- cbind(type="red",d1)
if(nrow(d2)>0)
{
d <- rbind(d,
cbind(type="blue",d2))
}
if(!is.null(d3))
{
d <- rbind(d,
cbind(type="black",d3)
)
}
if(nrow(d)>0)
{
d <- d[,value_numeric:=labels[value_numeric]]
d <- d[,value_numeric:=factor(value_numeric)]
d <- d[,         type:=factor(type)]
p <- d[,sum(end_point-begin_point),by=list(type,value_numeric)]
p <- ggplot(p,aes(x=value_numeric,y=V1,fill=type))
p <- p + geom_bar(width=0.25,stat="identity",position=position_dodge(0.8))
p <- p + coord_flip()
p <- p + ggtitle(title)
p <- p + scale_fill_manual("",values=c("red"="red","blue"="blue","black"="black"))
#p <- p + facet_grid(. ~ type)
p <- p + theme_minimal() +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_text(size = 0, angle = 0, hjust = 0),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
legend.position="none",
plot.title = element_text(size=7, face="bold",colour = "slategray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white")
)
return(p)
} else {
return(textGrob(""))
}
}
p1 <- barPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national1,labels,title=gF_SYSTEM_levels[1])
p2 <- barPlot(var.1[NHS==1]       ,var.2[NHS==1]       ,d3=national2,labels,title=gF_SYSTEM_levels[2])
var.1[NHS==1]
var.2[NHS==1]
barPlot <- function(
d1,
d2,
d3=NULL,
labels,
title=""
)
{
if(nrow(d1)==0)
{
return(textGrob(""))
}
d <- cbind(type="red",d1)
if(nrow(d2)>0)
{
d <- rbind(d,
cbind(type="blue",d2))
}
if(!is.null(d3))
{
d <- rbind(d,
cbind(type="black",d3)
)
}
if(nrow(d)>0)
{
d <- d[,value_numeric:=labels[value_numeric]]
d <- d[,value_numeric:=factor(value_numeric)]
d <- d[,         type:=factor(type)]
p <- d[,sum(end_point-begin_point),by=list(type,value_numeric)]
p <- ggplot(p,aes(x=value_numeric,y=V1,fill=type))
p <- p + geom_bar(width=0.25,stat="identity",position=position_dodge(0.8))
p <- p + coord_flip()
p <- p + ggtitle(title)
p <- p + scale_fill_manual("",values=c("red"="red","blue"="blue","black"="black"))
#p <- p + facet_grid(. ~ type)
p <- p + theme_minimal() +
theme(
axis.text.x=element_text(size=6, hjust = 0,colour="slategray"),
axis.text.y=element_text(size = 0, angle = 0, hjust = 0),
strip.text.x = element_text(size = 8, angle = 0),
strip.text.y = element_text(size = 8, angle = 0),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(size=7, face="bold",colour = "slategray"),
legend.position="none",
plot.title = element_text(size=7, face="bold",colour = "slategray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white")
)
return(p)
} else {
return(textGrob(""))
}
}
p1 <- barPlot(var.1[Interstate==1],var.2[Interstate==1],d3=national1,labels,title=gF_SYSTEM_levels[1])
p2 <- barPlot(var.1[NHS==1]       ,var.2[NHS==1]       ,d3=national2,labels,title=gF_SYSTEM_levels[2])
p3 <- barPlot(var.1[F_SYSTEM==1]  ,var.2[F_SYSTEM==1]  ,d3=national3,labels,title=gF_SYSTEM_levels[3])
p4 <- barPlot(var.1[F_SYSTEM==2]  ,var.2[F_SYSTEM==2]  ,d3=national4,labels,title=gF_SYSTEM_levels[4])
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
dev.off()
gVariablesLabels[Name=="ACCESS_CONTROL",]
?read.table
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
read.table("resources\\dat\\data_labels.csv",  sep=",",header=TRUE,stringsAsFactors=FALSE,allowEscapes=TRUE)
gVariablesLabels <- data.table(read.table("resources\\dat\\data_labels.csv",  sep=",",header=TRUE,stringsAsFactors=FALSE))
gVariablesLabels[Name=="ACCESS_CONTROL",]
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.ofF()
dev.off()
gVariablesLabels[Name=="FACILITY_TYPE",]
gVariablesLabels[Name=="FACILITY_TYPE",list(Code1,Code2,Code3,Code4,Code5,Code6,Code7,Code8,Code9,Code10,Code11)]
unlist(gVariablesLabels[Name=="FACILITY_TYPE",list(Code1,Code2,Code3,Code4,Code5,Code6,Code7,Code8,Code9,Code10,Code11)])
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
gVariablesLabels
gVariablesLabels[NumLevels>0,]
gVariablesLabels[Name=="F_SYSTEM",]
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
?arrangeGrob
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
dev.off()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
p <- ggplot()
is(p)
is(textGrob("datfa"))
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
Run()
install.packages("rvest")
invisible(sapply(X = list.files(path = "code", pattern = "*.R", full.names = TRUE)[-1], FUN = source))
# Run Tool
Run()
gF_SYSTEM_levels
Run()
